# Production deployment workflow
# Triggers on pushes to 'production' branch for optimized live deployment

name: Deploy to Firebase Hosting Production
on:
  push:
    branches:
      - production
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Only fetch the specific commit, not full history
          fetch-depth: 1
      
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          # Use faster registry
          registry-url: 'https://registry.npmjs.org'
          
      # More aggressive caching strategy
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
            /home/runner/.cache/node
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-deps-
            
      # Cache Vite build cache and dist folder
      - name: Cache Vite build
        uses: actions/cache@v4
        with:
          path: |
            node_modules/.vite
            .vite
            dist
          key: ${{ runner.os }}-vite-prod-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('src/**/*') }}
          restore-keys: |
            ${{ runner.os }}-vite-prod-${{ hashFiles('**/package-lock.json') }}-
            ${{ runner.os }}-vite-prod-
            
      # Optimized dependency installation
      - name: Install dependencies
        run: |
          # Configure npm for speed
          npm config set progress false
          npm config set audit false
          npm config set fund false
          npm config set loglevel error
          npm config set fetch-retries 3
          npm config set fetch-retry-mintimeout 10000
          npm config set fetch-retry-maxtimeout 30000
          # Skip if node_modules cache hit
          if [ ! -d "node_modules" ]; then
            npm ci --prefer-offline --no-audit --no-fund --silent
          else
            echo "Using cached node_modules"
          fi
          
      # Install firebase-tools if not cached
      - name: Setup Firebase CLI
        run: |
          if ! command -v firebase &> /dev/null; then
            npm install -g firebase-tools@latest --silent
          fi
            
      - name: Build project
        run: npm run build:production
      
      - name: Deploy to Firebase Hosting (Production)
        env:
          GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_EDGEVIDEO_AI_8753A }}
        run: |
          echo "$GOOGLE_APPLICATION_CREDENTIALS_JSON" > $GITHUB_WORKSPACE/firebase-service-account.json
          export GOOGLE_APPLICATION_CREDENTIALS=$GITHUB_WORKSPACE/firebase-service-account.json
          firebase deploy --only hosting:edgevideo-production --project edgevideo-ai-8753a --non-interactive
